*
*      HMS calorimeter. Parameters from hms_positions.parm
*
* $Log$
* Revision 1.6  1995/05/22 19:06:29  cdaq
* (SAW) Split gen_data_data_structures into gen, hms, sos, and coin parts
*
* Revision 1.5  1995/03/13  19:01:46  cdaq
* (JRA) Move hmax_cal_rows and hmax_cal_columns to gen_data_structures
*
* Revision 1.4  1995/01/04  17:09:32  cdaq
* (HGM) Increase hmax_cal_rows to 13
*
* Revision 1.3  1994/10/11  19:44:44  cdaq
* (SAW) Add hcal_slop
*
* Revision 1.2  1994/08/05  15:35:42  cdaq
* (SAW) Add makereg directive with required include files
*       Add "CTPTYPE=event" directive for auto generation of CTP reg calls
*
* Revision 1.1  1994/04/12  21:32:21  cdaq
* Initial revision
*
*     The following include statments must precede the inclusion of this
*     file in each routine that uses it.  The *%% syntax is also a
*     directive to makereg to tell it to include the code in the program
*     that it generates.
*
*%%   include 'hms_data_structures.cmn'
*
*     CTPTYPE=parm
*
      real*4 hcal_1pr_zpos      ! Z positions of front of shower counter layers
      real*4 hcal_2ta_zpos      !
      real*4 hcal_3ta_zpos      !
      real*4 hcal_4ta_zpos      !
      real*4 hcal_1pr_thick     ! Thickness of shower counter blocks
      real*4 hcal_2ta_thick     !
      real*4 hcal_3ta_thick     !
      real*4 hcal_4ta_thick     !
      integer*4 hcal_1pr_nr     !Number of shower blocks per column
      integer*4 hcal_2ta_nr     !
      integer*4 hcal_3ta_nr     !
      integer*4 hcal_4ta_nr     !
      real*4 hcal_1pr_left      !Y position, column #1
      real*4 hcal_1pr_right     !
      real*4 hcal_1pr_top       ! X positions, column #1
      real*4 hcal_2ta_left      ! Y position, column #2
      real*4 hcal_2ta_right     !
      real*4 hcal_2ta_top       ! X positions, column#2
      real*4 hcal_3ta_left      ! Y position, column #3
      real*4 hcal_3ta_right     !
      real*4 hcal_3ta_top       ! X positions, column #3
      real*4 hcal_4ta_left      ! Y position, column #4
      real*4 hcal_4ta_right     !
      real*4 hcal_4ta_top       ! X positions, column #4
      REAL*4 HCAL_SLOP          !SLOP IN DISTANCE BETWEEN TRACK AND BLOCK
      common/hms_cal_parms/
     &       hcal_1pr_zpos,
     &       hcal_2ta_zpos,
     &       hcal_3ta_zpos,
     &       hcal_4ta_zpos,
     &       hcal_1pr_thick,
     &       hcal_2ta_thick,
     &       hcal_3ta_thick,
     &       hcal_4ta_thick,
     &       hcal_1pr_nr,
     &       hcal_2ta_nr,
     &       hcal_3ta_nr,
     &       hcal_4ta_nr,
     &       hcal_1pr_left,
     &       hcal_1pr_right,
     &       hcal_1pr_top(hmax_cal_rows),
     &       hcal_2ta_left,
     &       hcal_2ta_right,
     &       hcal_2ta_top(hmax_cal_rows),
     &       hcal_3ta_left,
     &       hcal_3ta_right,
     &       hcal_3ta_top(hmax_cal_rows),
     &       hcal_4ta_left,
     &       hcal_4ta_right,
     &       hcal_4ta_top(hmax_cal_rows),
     &       hcal_slop
*
*      HMS calorimeter. Geometrical constants filled by h_init_cal
*
      real*4 hcal_block_xsize   !
      real*4 hcal_block_ysize   !Block dimensions - 10*70*10 cm^3
      real*4 hcal_block_zsize   !
      real*4 hcal_block_xc   !
      real*4 hcal_block_yc   !X,Y,Z coordinates of block centers
      real*4 hcal_block_zc   !
      real*4 hcal_xmin          !
      real*4 hcal_xmax          !
      real*4 hcal_ymin          !Boundaries of the HMS
      real*4 hcal_ymax          !calorimeter stack
      real*4 hcal_zmin          !
      real*4 hcal_zmax          !
      real*4 hcal_fv_xmin   !
      real*4 hcal_fv_xmax   !
      real*4 hcal_fv_ymin   !Boundaries of the
      real*4 hcal_fv_ymax   !fiducial volume
      real*4 hcal_fv_zmin   !
      real*4 hcal_fv_zmax   !
      common/hms_geometry_cal/
     &       hcal_block_xsize,
     &       hcal_block_ysize,
     &       hcal_block_zsize,
     &       hcal_block_xc(hmax_cal_blocks),
     &       hcal_block_yc(hmax_cal_blocks),
     &       hcal_block_zc(hmax_cal_blocks),
     &       hcal_xmin,hcal_xmax,
     &       hcal_ymin,hcal_ymax,
     &       hcal_zmin,hcal_zmax,
     &       hcal_fv_xmin,hcal_fv_xmax,
     &       hcal_fv_ymin,hcal_fv_ymax,
     &       hcal_fv_zmin,hcal_fv_zmax
*
*      HMS calorimeter. Sparsified data filled by h_sparsify_cal
*
*     CTPTYPE=event
*
      integer*4 hcal_rows          !Row number. Copied from hms_raw_cal
      integer*4 hcal_cols          !Column number. Copied from hms_raw_cal
      real*4    hcal_adcs          !Pulse height in channels(ADC-PED).
      integer*4 hcal_num_hits      !Total number of hits above threshold
      common/hms_sparsified_cal/ 
     &       hcal_rows(hmax_cal_blocks),
     &       hcal_cols(hmax_cal_blocks),
     &       hcal_adcs(hmax_cal_blocks),
     &       hcal_num_hits
*
*      HMS calorimeter. Cluster data, filled by h_clusters_cal
*
      integer*4 hnclusters_max     !Number of clusters allowed in the calorimeter
      parameter (hnclusters_max=5) !Set the maximum to 5
      integer*4 hnclusters_cal     !Number of clusters found
      integer*4 hcluster_hit       !Link pointer to cluster number for each hit
      integer*4 hcluster_size      !Number of hits in a cluster
      real*4 hcluster_xc      !X-coordinate of a cluster
      real*4 hcluster_e1      !Energy deposition in column #1
      real*4 hcluster_e2      !                            #2
      real*4 hcluster_e3      !                            #3
      real*4 hcluster_e4      !                            #4
      real*4 hcluster_et      !Total energy deposition
      common/hms_clusters_cal/
     &       hcluster_hit(hmax_cal_blocks),
     &       hcluster_size(hnclusters_max),
     &       hcluster_xc(hnclusters_max),
     &       hcluster_e1(hnclusters_max),
     &       hcluster_e2(hnclusters_max),
     &       hcluster_e3(hnclusters_max),
     &       hcluster_e4(hnclusters_max),
     &       hcluster_et(hnclusters_max),
     &       hnclusters_cal
*
*      HMS calorimeter. Calorimeter track quantities,filled by h_tracks_cal
*
      real*4 htrack_xc           !X,Y position of track on 
      real*4 htrack_yc           ! calorimeter front surface
      integer*4 hcluster_track   !Link pointer to calorimeter cluster number
      integer*4 hntracks_cal  !Number of tracks for which a cluster was found
      common/hms_tracks_cal/
     &       htrack_xc(hntracks_max),
     &       htrack_yc(hntracks_max),
     &       hcluster_track(hntracks_max),
     &       hntracks_cal
*
*     CTPTYPE=parm
*
*
*      HMS calorimeter. ADC pedestals and thresholds
*
      real*4 hcal_ped_mean      !Mean pedestal value
      real*4 hcal_ped_rms       !Pedestal rms deviation
      real*4 hcal_threshold     !Threshold=3.*hcal_ped_rms
      common/hms_cal_pedestals/
     &       hcal_ped_mean(hmax_cal_blocks),
     &       hcal_ped_rms(hmax_cal_blocks),
     &       hcal_threshold(hmax_cal_blocks)
*
*      HMS calorimeter. Calibration constants
*
      real*4 hcal_cal_const      !Calibration constants
      common/hms_cal_const/
     &       hcal_cal_const(hmax_cal_blocks)
*
*      HMS calorimeter. Relative gains & correction factors
*
      real*4 hcal_gain_ini   !Relative gains during the last calibration
      real*4 hcal_gain_cur   !Current relative gains
      real*4 hcal_gain_cor   !Correction factor: cor=ini/cur
      common/hms_cal_monitor/
     &       hcal_gain_ini(hmax_cal_blocks),
     &       hcal_gain_cur(hmax_cal_blocks),
     &       hcal_gain_cor(hmax_cal_blocks)
*
*      HMS calorimeter. Debuging LUN and flags
*
      integer*4 hlun_dbg_cal
      integer*4 hdbg_raw_cal
      integer*4 hdbg_sparsified_cal
      integer*4 hdbg_decoded_cal
      integer*4 hdbg_clusters_cal
      integer*4 hdbg_tracks_cal
      integer*4 hdbg_tests_cal
      common/hms_cal_flags/
     &       hlun_dbg_cal,
     &       hdbg_raw_cal,
     &       hdbg_sparsified_cal,
     &       hdbg_decoded_cal,
     &       hdbg_clusters_cal,
     &       hdbg_tracks_cal,
     &       hdbg_tests_cal
