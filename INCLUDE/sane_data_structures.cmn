*****************begin: luc_data_structures.cmn*************************
*
*     include file     sane_data_structures.cmn
*
*     Author:   H. Baghdasaryan     18 Jan,2008
*
* $Log$
* Revision 1.1.2.7  2009/02/11 21:42:33  cdaq
* *** empty log message ***
*
* Revision 1.1.2.6  2009/01/30 20:33:28  cdaq
* *** empty log message ***
*
* Revision 1.1.2.5  2008/10/31 08:26:02  cdaq
* *** empty log message ***
*
* Revision 1.1.2.4  2008/10/25 12:39:42  cdaq
* *** empty log message ***
*
* Revision 1.1.2.3  2008/10/11 15:05:05  cdaq
* slow raster
*
* Revision 1.1.2.2  2008/10/02 18:01:49  cdaq
* *** empty log message ***
*
* Revision 1.1.2.1  2008/09/26 21:42:48  cdaq
* *** empty log message ***
*

c
c
c	SANE RAW DATA Structure
c
c

c
c     VERY IMPORTANT look at CTPTYPE DO not ignore.. Makes sence.
c

*
*
*     CTPTYPE=event
*

      INTEGER*4 LUCITE_SANE_MAX_HITS           ! MAXIMUM TOTAL NUMBER OF LUCITE HITS
      PARAMETER (LUCITE_SANE_MAX_HITS=190)      ! Should exceed # of paddles
      INTEGER*4 LUCITE_SANE_MAX_COUNTER_NUM         ! MAXIMUM TOTAL NUMBER OF LUCITE HITS
      PARAMETER (LUCITE_SANE_MAX_COUNTER_NUM=28)    ! Should exceed # of paddles
      INTEGER*4 LUCITE_SANE_RAW_PLANE(LUCITE_SANE_MAX_HITS)
      INTEGER*4 LUCITE_SANE_RAW_PLANE2(LUCITE_SANE_MAX_HITS)
      INTEGER*4 LUCITE_SANE_RAW_PLANE3(LUCITE_SANE_MAX_HITS)
      INTEGER*4 LUCITE_SANE_RAW_COUNTER_NUM(LUCITE_SANE_MAX_HITS)
      INTEGER*4 LUCITE_SANE_RAW_COUNTER_NUM2(LUCITE_SANE_MAX_HITS)
      INTEGER*4 LUCITE_SANE_RAW_COUNTER_NUM3(LUCITE_SANE_MAX_HITS)
      INTEGER*4 LUCITE_SANE_RAW_ADC_POS(LUCITE_SANE_MAX_HITS)
      INTEGER*4 LUCITE_SANE_RAW_ADC_NEG(LUCITE_SANE_MAX_HITS)
      INTEGER*4 LUCITE_SANE_RAW_TDC_POS(LUCITE_SANE_MAX_HITS)
      INTEGER*4 LUCITE_SANE_RAW_TDC_NEG(LUCITE_SANE_MAX_HITS)
      INTEGER*4 LUCITE_SANE_RAW_TOT_HITS
      INTEGER*4 LUCITE_SANE_RAW_TOT_HITS2
      INTEGER*4 LUCITE_SANE_RAW_TOT_HITS3

      COMMON/LUCITE_SANE_RAW_SCIN/
     &	LUCITE_SANE_RAW_COUNTER_NUM,
     &	LUCITE_SANE_RAW_COUNTER_NUM2,
     &	LUCITE_SANE_RAW_COUNTER_NUM3,
     &	LUCITE_SANE_RAW_ADC_POS,
     &	LUCITE_SANE_RAW_ADC_NEG,
     &	LUCITE_SANE_RAW_TDC_POS,
     &	LUCITE_SANE_RAW_TDC_NEG,
     &	LUCITE_SANE_RAW_TOT_HITS,
     &	LUCITE_SANE_RAW_TOT_HITS2,
     &	LUCITE_SANE_RAW_TOT_HITS3, 
     &	LUCITE_SANE_RAW_PLANE, 
     &	LUCITE_SANE_RAW_PLANE2, 
     &	LUCITE_SANE_RAW_PLANE3 

ccc    END of the RAW DATA


cccccccccccccccccccccccccccccccccc
c
c	LUCITE Pedestal Structure
c
cccccccccccccccccccccccccccccccccc
      INTEGER*4       luc_min_peds
      INTEGER*4       luc_ped_num_neg(LUCITE_SANE_MAX_COUNTER_NUM)
      INTEGER*4       luc_ped_sum2_neg(LUCITE_SANE_MAX_COUNTER_NUM)
      INTEGER*4       luc_ped_sum_neg(LUCITE_SANE_MAX_COUNTER_NUM)
      INTEGER*4       luc_ped_limit_neg(LUCITE_SANE_MAX_COUNTER_NUM)
      INTEGER*4       luc_ped_num_pos(LUCITE_SANE_MAX_COUNTER_NUM)
      INTEGER*4       luc_ped_sum2_pos(LUCITE_SANE_MAX_COUNTER_NUM)
      INTEGER*4       luc_ped_sum_pos(LUCITE_SANE_MAX_COUNTER_NUM)
      INTEGER*4       luc_ped_limit_pos(LUCITE_SANE_MAX_COUNTER_NUM)
      real*4 	      luc_ped_threshold_neg(LUCITE_SANE_MAX_COUNTER_NUM)
      real*4 	      luc_ped_threshold_pos(LUCITE_SANE_MAX_COUNTER_NUM)
      real*4 	      luc_ped_mean_neg(LUCITE_SANE_MAX_COUNTER_NUM)
      real*4 	      luc_ped_mean_pos(LUCITE_SANE_MAX_COUNTER_NUM)
      real*4 	      luc_ped_rms_neg(LUCITE_SANE_MAX_COUNTER_NUM)
      real*4 	      luc_ped_rms_pos(LUCITE_SANE_MAX_COUNTER_NUM)


      COMMON /LUCITE_SANE_PED_SCIN/
     $	     luc_min_peds,
     $       luc_ped_num_neg,
     $       luc_ped_sum2_neg,
     $       luc_ped_sum_neg,
     $       luc_ped_limit_neg,
     $       luc_ped_num_pos,
     $       luc_ped_sum2_pos,
     $       luc_ped_sum_pos,
     $       luc_ped_limit_pos,
     & 	     luc_ped_threshold_neg,
     & 	     luc_ped_threshold_pos,
     & 	     luc_ped_mean_neg,
     & 	     luc_ped_mean_pos,
     & 	     luc_ped_rms_neg,
     & 	     luc_ped_rms_pos

ccc END OF THE PEDESTAL
cccc
c
c     Cerenkov SANE
c
cc

      INTEGER*4 CERENKOV_SANE_MAX_HITS           ! MAXIMUM TOTAL NUMBER OF Cerenkov HITS
      PARAMETER (CERENKOV_SANE_MAX_HITS=35) ! Should exceed # of paddles
      INTEGER*4 CERENKOV_SANE_MAX_CER_COUNTER           ! MAXIMUM TOTAL NUMBER OF Cerenkov HITS
      PARAMETER (CERENKOV_SANE_MAX_CER_COUNTER=12) 
      INTEGER*4 CERENKOV_SANE_RAW_PLANE(CERENKOV_SANE_MAX_HITS)
      INTEGER*4 CERENKOV_SANE_RAW_PLANE2(CERENKOV_SANE_MAX_HITS)
      INTEGER*4 CERENKOV_SANE_RAW_COUNTER_NUM(CERENKOV_SANE_MAX_HITS)
      INTEGER*4 CERENKOV_SANE_RAW_COUNTER_NUM2(CERENKOV_SANE_MAX_HITS)
      INTEGER*4 CERENKOV_SANE_RAW_ADC(CERENKOV_SANE_MAX_HITS)
      INTEGER*4 CERENKOV_SANE_RAW_TDC(CERENKOV_SANE_MAX_HITS)
      INTEGER*4 CERENKOV_SANE_RAW_TOT_HITS
      INTEGER*4 CERENKOV_SANE_RAW_TOT_HITS2

      COMMON/CERENKOV_SANE_RAW_SCIN/
     &	CERENKOV_SANE_RAW_COUNTER_NUM,
     &	CERENKOV_SANE_RAW_COUNTER_NUM2,
     &	CERENKOV_SANE_RAW_ADC,
     &	CERENKOV_SANE_RAW_TDC,
     &	CERENKOV_SANE_RAW_TOT_HITS, 
     &	CERENKOV_SANE_RAW_TOT_HITS2, 
     & 	CERENKOV_SANE_RAW_PLANE 

ccc    END of the RAW DATA


cccccccccccccccccccccccccccccccccc
c
c	CER_SANE Pedestal Structure
c
cccccccccccccccccccccccccccccccccc

      INTEGER*4       cer_sane_min_peds
      INTEGER*4       cer_sane_ped_num(CERENKOV_SANE_MAX_CER_COUNTER)
      INTEGER*4       cer_sane_ped_sum2(CERENKOV_SANE_MAX_CER_COUNTER)
      INTEGER*4       cer_sane_ped_sum(CERENKOV_SANE_MAX_CER_COUNTER)
      INTEGER*4       cer_sane_ped_limit(CERENKOV_SANE_MAX_CER_COUNTER)
      real*4 	      cer_sane_ped_threshold(CERENKOV_SANE_MAX_CER_COUNTER)
      real*4 	      cer_sane_ped_mean(CERENKOV_SANE_MAX_CER_COUNTER)
      real*4 	      cer_sane_ped_rms(CERENKOV_SANE_MAX_CER_COUNTER)


      COMMON /CERENKOV_SANE_PED_SCIN/
     $	     cer_sane_min_peds,
     $       cer_sane_ped_num,
     $       cer_sane_ped_sum2,
     $       cer_sane_ped_sum,
     $       cer_sane_ped_limit,
     & 	     cer_sane_ped_threshold,
     & 	     cer_sane_ped_mean,
     & 	     cer_sane_ped_rms

ccc END OF THE PEDESTAL
cccc
c
c     Traker SANE
c
cc

      INTEGER*4 TRACKER_SANE_MAX_HITS           ! MAXIMUM TOTAL NUMBER OF Tracker HITS
      PARAMETER (TRACKER_SANE_MAX_HITS=448)     ! Should exceed # of paddles
c      PARAMETER (TRACKER_SANE_RAW_COUNTER=448)  ! Should exceed # of paddles
      INTEGER*4 TRACKER_SANE_RAW_PLANE_Y(TRACKER_SANE_MAX_HITS)
      INTEGER*4 TRACKER_SANE_RAW_PLANE_X(TRACKER_SANE_MAX_HITS)
      INTEGER*4 TRACKER_SANE_RAW_COUNTER_Y(TRACKER_SANE_MAX_HITS)
      INTEGER*4 TRACKER_SANE_RAW_COUNTER_X(TRACKER_SANE_MAX_HITS)
      INTEGER*4 TRACKER_SANE_RAW_TDC_Y(TRACKER_SANE_MAX_HITS)
      INTEGER*4 TRACKER_SANE_RAW_TDC_X(TRACKER_SANE_MAX_HITS)
      INTEGER*4 TRACKER_SANE_RAW_TOT_HITS_Y
      INTEGER*4 TRACKER_SANE_RAW_TOT_HITS_X

      COMMON/TRACKER_SANE_RAW/
     &  TRACKER_SANE_RAW_PLANE_Y,          
     &	TRACKER_SANE_RAW_PLANE_X, 
     &	TRACKER_SANE_RAW_COUNTER_Y, 
     &  TRACKER_SANE_RAW_COUNTER_X,
     &	TRACKER_SANE_RAW_TDC_Y, 
     &  TRACKER_SANE_RAW_TDC_X,
     &	TRACKER_SANE_RAW_TOT_HITS_Y, 
     &  TRACKER_SANE_RAW_TOT_HITS_X

*
*     CTPTYPE=parm
*     
*     parameters from CALIBRATION

      INTEGER*4  TRACKER_SANE_XCALIBRATION(64)
      INTEGER*4  TRACKER_SANE_Y1CALIBRATION(128)
      INTEGER*4  TRACKER_SANE_Y2CALIBRATION(128)
      INTEGER*4  TRACKER_SANE_XSIGMA(64)
      INTEGER*4  TRACKER_SANE_Y1SIGMA(128)
      INTEGER*4  TRACKER_SANE_Y2SIGMA(128)
      COMMON/TRACKER_CALIB/
     &     TRACKER_SANE_XCALIBRATION,
     &     TRACKER_SANE_Y1CALIBRATION,	
     &     TRACKER_SANE_Y2CALIBRATION,	
     &     TRACKER_SANE_XSIGMA,	
     &     TRACKER_SANE_Y1SIGMA,
     &     TRACKER_SANE_Y2SIGMA
      
      real LUCITE_SANE_TDC_TIMING(28)
      real LUCITE_SANE_MEAN_POS(28)
      real LUCITE_SANE_MEAN_NEG(28)
      real LUCITE_SANE_SIGMA_POS(28)
      real LUCITE_SANE_SIGMA_NEG(28)
      COMMON/LUCITE_CALIB/
     &     LUCITE_SANE_TDC_TIMING,
     &     LUCITE_SANE_MEAN_POS,
     &     LUCITE_SANE_MEAN_NEG,
     &     LUCITE_SANE_SIGMA_POS,
     &     LUCITE_SANE_SIGMA_NEG

      real CER_SANE_MEAN(8)
      real CER_SANE_SIGMA(8)
      real CER_SANE_TDC_TIMING(8)
      real CER_SANE_ADC_CUT(8)
      real CER_SANE_GEOM_CUT_LOW(8)
      real CER_SANE_GEOM_CUT_HI(8)
      integer CER_SANE_GEOM_CUT_X(8)

      COMMON/CER_CALIB/
     &     CER_SANE_MEAN,
     &     CER_SANE_SIGMA,
     &     CER_SANE_TDC_TIMING,
     & CER_SANE_ADC_CUT,
     & CER_SANE_GEOM_CUT_LOW,
     & CER_SANE_GEOM_CUT_HI,
     & CER_SANE_GEOM_CUT_X

      real TrackerX_SHIFT(4) ! position in X,Y,Z Z-betta detector dirrection, 4- angleof betta detector
      real TrackerY1_SHIFT(4) !  position in Z-betta detector dirrection
      real TrackerY2_SHIFT(4) !  position in Z-betta detector dirrection
      real Lucite_SHIFT(4) !  position in Z-betta detector dirrection
      real Bigcal_SHIFT(4) !  position in Z-betta detector dirrection
      COMMON/Z_SHIFTS/
     &     TrackerX_SHIFT,
     &     TrackerY1_SHIFT,
     &     TrackerY2_SHIFT,
     &     Lucite_SHIFT,
     &     Bigcal_SHIFT
      real BigCal_Calib_Gain(32,56)
      COMMON/BigCal_Calib_H/BigCal_Calib_Gain
c
c
c     SANE TRIGGER COUNTER is for F1 TDC 
c     We need it to subtract TDC value of each detector.
c     PLEASE MAKE SURE YOU INCLUDED it in one of the param files.
c
      integer*4 SANE_TRIGGER_COUNTER, SANE_TRIGGER_WINDOW
      COMMON/SANE_TRIG_COUNTER/SANE_TRIGGER_COUNTER, SANE_TRIGGER_WINDOW

c
c     Parameters for Tracking Tranformatio
c
c
      real SANE_TRANSFORM_MATRIX_THETA(14),SANE_TRANSFORM_MATRIX_PHI(38)
      COMMON/SANE_TRANSFORM/SANE_TRANSFORM_MATRIX_THETA,SANE_TRANSFORM_MATRIX_PHI

ccc    END of the RAW DATA

c
c     SANE TARGET FIELD AND ANGLES
c
	
      real*8 SANE_BETA_ANGLE_THETA, SANE_BETA_ANGLE_PHI
      real*8 SANE_FIELD_ANGLE_THETA, SANE_FIELD_ANGLE_PHI
      real*8 SANE_TGTFIELD_B
      real*8 SANE_BETA_OMEGA, SANE_HMS_OMEGA, SANE_BETA_PHI, SANE_HMS_PHI
      COMMON /SANEFIELDANGLES/ SANE_BETA_ANGLE_THETA, SANE_BETA_ANGLE_PHI,
     ,     SANE_FIELD_ANGLE_THETA, SANE_FIELD_ANGLE_PHI,
     ,     SANE_TGTFIELD_B,
     ,     SANE_BETA_OMEGA, SANE_HMS_OMEGA, SANE_BETA_PHI, SANE_HMS_PHI
      
