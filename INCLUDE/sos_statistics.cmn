*      sos_statistics.cmn
*      common blocks containing event statistics for s_reconstruction
* $Log$
* Revision 1.7  1995/05/22 19:02:13  cdaq
* (SAW) Split gen_data_data_structures into gen, hms, sos, and coin parts
* Fix a conflicting common block name
*
* Revision 1.6  1995/04/06  20:21:08  cdaq
* (SAW) Remove hms isms and hardwired array sizes
*
* Revision 1.5  1995/03/13  19:15:42  cdaq
* (JRA) Add many new statistics
*
* Revision 1.4  1994/11/21  18:02:39  cdaq
* * (SPB) Recopied from hms file and modified names for SOS
*
* Revision 1.3  1994/08/05  21:19:32  cdaq
* (SAW) Add makereg directive with required include files
*       Add "CTPTYPE=event" directive for auto generation of CTP reg calls
*
* Revision 1.2  1994/06/14  03:34:25  cdaq
* (DFG) add chamber efficiency and sigma
*
* Revision 1.1  1994/06/07  02:00:48  cdaq
* Initial revision
*
*     The following include statments must precede the inclusion of this
*     file in each routine that uses it.  The *%% syntax is also a
*     directive to makereg to tell it to include the code in the program
*     that it generates.
*
*%%   include 'sos_data_structures.cmn'
*
*     CTPTYPE=parm
*
      integer*4 s_recon_num             ! Number of calls to s_reconstruction
      integer*4 sgoodtracksctr          ! number of good tracks in s_physics
      integer*4 splanehitctr(SMAX_NUM_DC_PLANES) ! number of hits in each plane
*                                       for good tracks
*     
      common/sos_statistics/
     &     s_recon_num,
     &     sgoodtracksctr,
     &     splanehitctr


      real*4 splanesigmasq(SMAX_NUM_DC_PLANES) ! sum of 
*                                        (position - fit position)**2 /sigma**2
      real*4 smeasuredsigma(SMAX_NUM_DC_PLANES) ! splanesigmasq/ sgoodtracksctr
      real*4 schambereff(SMAX_NUM_DC_PLANES)  ! chamber efficencies
*
      common/sos_statistisc_r4/
     & splanesigmasq,
     & smeasuredsigma,
     & schambereff

*
*     CTPTYPE=parm
*
      real*4 sstat_maxchisq
      real*4 sstat_slop
*
*     CTPTYPE=event
*
      integer*4 sstat_numevents
      integer*4 sstat_trk(snum_scin_planes,snum_scin_elements)
      integer*4 sstat_poshit(snum_scin_planes,snum_scin_elements)
      integer*4 sstat_neghit(snum_scin_planes,snum_scin_elements)
      integer*4 sstat_orhit(snum_scin_planes,snum_scin_elements)
      integer*4 sstat_andhit(snum_scin_planes,snum_scin_elements)
      integer*4 sstat_trksum(snum_scin_planes)
      integer*4 sstat_possum(snum_scin_planes)
      integer*4 sstat_negsum(snum_scin_planes)
      integer*4 sstat_orsum(snum_scin_planes)
      integer*4 sstat_andsum(snum_scin_planes)
      real*4 sstat_poseff(snum_scin_planes)
      real*4 sstat_negeff(snum_scin_planes)
      real*4 sstat_oreff(snum_scin_planes)
      real*4 sstat_andeff(snum_scin_planes)
      real*4 seff_s1
      real*4 seff_s2
      real*4 seff_stof
      real*4 seff_4_of_4
      real*4 seff_3_of_4

      common/sscin_statistics/
     &  sstat_numevents,
     &  sstat_trk,         !# of times track points near center of scin.
     &  sstat_poshit,      !# of times the pos tube on scintillator fired
     &  sstat_neghit,      !# of times the pos tube on scintillator fired
     &  sstat_orhit,       !# of times either tube fired
     &  sstat_andhit,      !# of times both tubes fired
     &  sstat_trksum,      !summed over all counters on plane
     &  sstat_possum,      !summed over all counters on plane
     &  sstat_negsum,      !summed over all counters on plane
     &  sstat_orsum,       !summed over all counters on plane
     &  sstat_andsum,      !summed over all counters on plane
     &  sstat_poseff,      !efficiency over all counters on plane
     &  sstat_negeff,      !efficiency over all counters on plane
     &  sstat_oreff,       !efficiency over all counters on plane
     &  sstat_andeff,      !efficiency over all counters on plane
     &  sstat_slop,        !distance allowed from center of scintillator.
     &  sstat_maxchisq,    !maximum chisq allowed to use track for eff. calc.
     &  seff_s1,           !calculated trigger eff. for s1 =(s1x .or. s1y).
     &  seff_s2,           !calculated trigger eff. for s2 =(s2x .or. s2y).
     &  seff_stof,         !calculated trigger eff. for stof =(s1 .and. s2).
     &  seff_4_of_4,       !calculated trigger eff. for 4/4 planes.
     &  seff_3_of_4        !calculated trigger eff. for 3/4 planes.


*
*     CTPTYPE=parm
*
      real*4 sstat_cal_maxchisq
      real*4 sstat_cal_slop
*
*     CTPTYPE=event
*
      integer*4 sstat_cal_numevents
      integer*4 sstat_cal_trk(smax_cal_columns,smax_cal_rows)
      integer*4 sstat_cal_hit(smax_cal_columns,smax_cal_rows)
      integer*4 sstat_cal_trksum(smax_cal_columns)
      integer*4 sstat_cal_hitsum(smax_cal_columns)
      real*4 sstat_cal_eff(smax_cal_columns)

      common/scal_statistics/
     &  sstat_cal_numevents,
     &  sstat_cal_trk,         !# of times track points near center of block.
     &  sstat_cal_hit,         !# of times the tube on block was over threshold.
     &  sstat_cal_trksum,      !summed over all blocks on plane.
     &  sstat_cal_hitsum,      !summed over all blocks on plane.
     &  sstat_cal_eff,         !efficiency over all counters on plane.
     &  sstat_cal_slop,        !distance allowed from center of block.
     &  sstat_cal_maxchisq     !maximum chisq allowed to use track for eff. calc.
