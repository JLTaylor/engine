*****************begin: gen_data_structures.cmn*************************
*
*     include file     gen_data_structures.cmn
*
*     Author:	D. F. Geesaman		1 September 1993
*
* $Log$
* Revision 1.6  1994/04/12 18:38:15  cdaq
* (DFG) Change dimension of HNTRACK_HITS(HNTRACKS_MAX,HNTRACKHITS_MAX+1)
*                           SNTRACK_HITS(SNTRACKS_MAX,SNTRACKHITS_MAX+1)
*                           to allow space for number of hits.
* (SAW) Remove craw common to gen_craw.cmn
*
* Revision 1.5  1994/03/24  17:02:03  cdaq
* DFG change decoded scin to arrington format in both hms and sos
*     change track tests to amatouni format
*
* Revision 1.4  1994/02/21  02:54:22  cdaq
* DFG Separate dimensioning parameters from actual number
*     SNUM_DC_PLANES  --> SMAX_NUM_DC_PLANES
*     HNUM_DC_PLANES  --> HMAX_NUM_DC_PLANES
*
* Revision 1.3  1994/02/09  22:26:10  cdaq
* (DFG) Add beam and spectrometer geometry banks.
* Separate raw and decoded data for scin and cal
* Change XCER_COR_ADC to XCER_PLANE
*
* Revision 1.2  1994/02/08  21:19:34  cdaq
* Geesaman's Jan 5 copy adding HMS_TRACK_TESTS and SOS_TRACK_TESTS
*
* Revision 1.1  1994/02/07  17:05:43  cdaq
* Initial revision
*
*
*    BASIC BEAM PARAMETERS
*
*     CEBEAM                 BEAM ENERGY (GEV)
*     CPBEAM                 BEAM MOMENTUM (GEV/C)
*
*     BEAM RASTER POSITION
*         CXRAST            X POSITION OF RASTERED BEAM
*         CYRAST            Y POSITION OF RASTERED BEAM
*
      REAL*4  CEBEAM         ! BEAM ENERGY (GEV)
      REAL*4  CPBEAM         ! BEAM MOMENTUM (GEV/C)

      REAL*4 CXRAST
      REAL*4 CYRAST
      COMMON/COIN_BEAM/
     &     CEBEAM,
     &     CPBEAM,
     &     CXRAST,
     &     CYRAST
*
*    BASIC TARGET PARAMETERS
*
*     TMASS_TARGET           TARGET MASS IN GEV
*     TZ_TARGET              TARGET CHARGE 
*     TA_TARGET              TARGET ATOMIC MASS NUMBER
*     TTHETA_TAR             TARGET LAB ANGLE THETA
*     TPHI_TAR               TARGET LAB ANGLE PHI
*     TRAD_LENGTH            TARGET RADIATION LENGTH
      REAL*4    TMASS_TARGET
      REAL*4    TZ_TARGET
      REAL*4    TA_TARGET
      REAL*4    TTHETA_TAR             
      REAL*4    TPHI_TAR
      REAL*4    TRAD_LENGTH
      COMMON/TARGET/
     &     TMASS_TARGET,
     &     TZ_TARGET,
     &     TA_TARGET,
     &     TTHETA_TAR,             
     &     TPHI_TAR,
     &     TRAD_LENGTH
*
*     HTHETA_LAB             HMS LAB ANGLE THETA (RADIANS)
*     HPHI_LAB               HMS LAB ANGLE PHI 
*     HPCENTRAL              HMS CENTRAL MOMENUTM (GEV)
*     HBFIELD                HMS B FIELD INCLUDING SIGN
*
      REAL*4  HTHETA_LAB     ! HMS LAB ANGLE THETA (RADIANS)
      REAL*4  HPHI_LAB       ! HMS LAB ANGLE PHI 
      REAL*4  HPCENTRAL      ! HMS CENTRAL MOMENUTM (GEV)
      REAL*4  HBFIELD        ! HMS B FIELD INCLUDING SIGN
      COMMON/HMS_SPECTROMETER/
     &      HTHETA_LAB,
     &      HPHI_LAB,
     &      HPCENTRAL,
     &      HBFIELD 
*
*     STHETA_LAB             SOS LAB ANGLE THETA (RADIANS)
*     SPHI_LAB               SOS LAB ANGLE PHI 
*     SPCENTRAL              SOS CENTRAL MOMENUTM (GEV)
*     SBFIELD                SOS B FIELD INCLUDING SIGN
*
      REAL*4  STHETA_LAB     ! SOS LAB ANGLE THETA (RADIANS)
      REAL*4  SPHI_LAB       ! SOS LAB ANGLE PHI 
      REAL*4  SPCENTRAL      ! SOS CENTRAL MOMENUTM (GEV)
      REAL*4  SBFIELD        ! SOS B FIELD INCLUDING SIGN
      COMMON/SOS_SPECTROMETER/
     &      STHETA_LAB,
     &      SPHI_LAB,
     &      SPCENTRAL,
     &      SBFIELD
*
*     HMS  DECODED DATA
*
*     FILLED BY G_get_next_event 
*     HMS DRIFT CHAMBER HITS
*         EACH CHAMBER HIT (TDC VALUE) HAS A 
*             PLANE NUMBER
*             WIRE NUMBER
*             TDC VALUE
*
*     THE TOTAL NUMBER OF HITS IS GIVEN IN HDC_RAW_TOT_HITS
*
      INTEGER*4 HMAX_DC_HITS       ! MAXIUM NUMBER OF DRIFT CHAMBER HITS
      INTEGER*4 HMAX_NUM_DC_PLANES ! MAX NUMBER OF HMS DRIFT CHAMBER PLANES
      PARAMETER(HMAX_DC_HITS=1008) 
      PARAMETER(HMAX_NUM_DC_PLANES=12)
      INTEGER*4 HDC_RAW_PLANE_NUM
      INTEGER*4 HDC_RAW_WIRE_NUM
      INTEGER*4 HDC_RAW_TDC
      INTEGER*4 HDC_RAW_TOT_HITS
      COMMON/HMS_RAW_DC/
     1    HDC_RAW_PLANE_NUM(HMAX_DC_HITS),
     2    HDC_RAW_WIRE_NUM(HMAX_DC_HITS),
     3    HDC_RAW_TDC(HMAX_DC_HITS),
     4    HDC_RAW_TOT_HITS
*
*     HMS  DECODED DC DATA
*
*     FILLED BY H_TRANS_DC TRANSLATION  ROUTINE 
*     HMS DRIFT CHAMBER HITS
*         EACH CHAMBER HIT (TDC VALUE) HAS A 
*             PLANE NUMBER
*             WIRE NUMBER
*             TDC VALUE
*             DRIFT TIME
*             DRIFT DISTANCE
*             GENERALIZED COORDINATE OF HIT WIRE CENTER
*             GENERALIZED COORDINATE OF HIT PERPENDICULAR TO WIRE DIRECTION
*
*     THE TOTAL NUMBER OF HITS IN EACH PLANE IS GIVEN IN HDC_HITS_PER_PLANE(I)
*     THE TOTAL NUMBER OF HITS IS GIVEN IN HDC_TOT_HITS
*
      INTEGER*4 HDC_PLANE_NUM     ! copied from HMS_RAW_DC
      INTEGER*4 HDC_WIRE_NUM      ! copied from HMS_RAW_DC
      INTEGER*4 HDC_TDC           ! copied from HMS_RAW_DC
      INTEGER*4 HDC_HITS_PER_PLANE
      INTEGER*4 HDC_TOT_HITS
      REAL*4 HDC_DRIFT_TIME
      REAL*4 HDC_DRIFT_DIS
      REAL*4 HDC_WIRE_CENTER
      REAL*4  HDC_WIRE_COORD
      COMMON/HMS_DECODED_DC/
     1    HDC_DRIFT_TIME(HMAX_DC_HITS),
     2    HDC_DRIFT_DIS(HMAX_DC_HITS),
     3    HDC_WIRE_CENTER(HMAX_DC_HITS),
     4    HDC_WIRE_COORD(HMAX_DC_HITS),
     5    HDC_PLANE_NUM(HMAX_DC_HITS),
     6    HDC_WIRE_NUM(HMAX_DC_HITS),
     7    HDC_TDC(HMAX_DC_HITS),
     8    HDC_HITS_PER_PLANE(HMAX_NUM_DC_PLANES),
     9    HDC_TOT_HITS
*
*     HMS SCINTILLATOR HITS
*     FILLED BY G_get_next_event 
*         EACH SCINTILLATOR HIT IS SPECIFIED BY A
*              SCINTILLATOR PLANE NUMBER
*              SCINTILLATOR COUNTER NUMBER
*              SCINTILLATOR ADC AT POSITIVE GENERALIZED COORDINATE END
*              SCINTILLATOR ADC AT NEGATIVE GENERALIZED COORDINATE END
*              SCINTILLATOR TDC AT POSITIVE GENERALIZED COORDINATE END
*              SCINTILLATOR TDC AT NEGATIVE GENERALIZED COORDINATE END    
*     THE TOTAL NUMBER OF HITS IS GIVEN BY HSCIN_TOT_HITS 
      INTEGER*4 HMAX_SCIN_HITS           ! MAXIMUM TOTAL NUMBER OF SCIN HITS
      PARAMETER (HMAX_SCIN_HITS=16)
      INTEGER*4 HNUM_SCIN_PLANES          ! TOTAL NUMBER OF SCIN PLANES
      PARAMETER (HNUM_SCIN_PLANES=4)
      INTEGER*4 HSCIN_PLANE_NUM
      INTEGER*4 HSCIN_COUNTER_NUM
      INTEGER*4 HSCIN_ADC_POS
      INTEGER*4 HSCIN_ADC_NEG
      INTEGER*4 HSCIN_TDC_POS
      INTEGER*4 HSCIN_TDC_NEG
      INTEGER*4 HSCIN_TOT_HITS 
*
      COMMON/HMS_RAW_SCIN/
     &    HSCIN_PLANE_NUM(HMAX_SCIN_HITS),
     &    HSCIN_COUNTER_NUM(HMAX_SCIN_HITS),
     &    HSCIN_ADC_POS(HMAX_SCIN_HITS),
     &    HSCIN_ADC_NEG(HMAX_SCIN_HITS),
     &    HSCIN_TDC_POS(HMAX_SCIN_HITS),
     &    HSCIN_TDC_NEG(HMAX_SCIN_HITS),
     &    HSCIN_TOT_HITS
*
*
*    DECODED SCIN HITS
*     FILLED BY H_TRANS_SCIN
*       THIS USES SCINTILLATOR INFORMATION ONLY TO CALCUATE   
*          HSCIN_APPROX_HIT_COORD    GENERALIZED COORDINATE ALONG HIT
*                                      SCINTILLATOR DETERMINED FROM TDC INFO.
*          HSCIN_COR_ADC       CORRECTED PULSE HEIGHT AT HIT
*          HSCIN_COR_TIME      CORRECTED TIME AT HIT
*     THE TOTAL NUMBER OF HITS IN EACH PLANE IS GIVEN BY HSCIN_HITS_PER_PLANE
*     THE HSTART_TIME IS DEFINED AS THE TIME IF THE TRACK HAD GONE THROUGH
* THE CENTER OF S1X. IT IS USED BY H_TRANS_DC FOR THE DRIFT TIME 
* CALCULATION.
*     HTWO_GOOD_TIMES  IS A LOGICAL VARIABLE WHICH IS TRUE IF BOTH ENDS
* OF THE SCINTILLATOR ARE HIT AND FALSE IF ONLY ONE END IS HIT. 
*     HGOOD_START_TIME IS TRUE IF A START TIME WAS FOUND
*     HGOOD_START_PLANE IS TRUE IF TIME WAS SET BY COUNTER IN S1X.
*
      REAL*4    HSCIN_ZPOS(HMAX_SCIN_HITS)
      REAL*4    HSCIN_CENTER_COORD(HMAX_SCIN_HITS)
      REAL*4    HSCIN_DEC_HIT_COORD(HMAX_SCIN_HITS)
      REAL*4    HSCIN_WIDTH(HMAX_SCIN_HITS)
      REAL*4    HSCIN_SLOP(HMAX_SCIN_HITS)
      REAL*4    HSCIN_COR_ADC(HMAX_SCIN_HITS)
      REAL*4    HSCIN_COR_TIME(HMAX_SCIN_HITS)
      REAL*4    HSTART_TIME
      INTEGER*4 HSTART_HITNUM
      INTEGER*4 HSTART_HITSIDE
      INTEGER*4 HSCIN_HITS_PER_PLANE(HNUM_SCIN_PLANES)
      LOGICAL*4 HTWO_GOOD_TIMES(HMAX_SCIN_HITS)
      LOGICAL*4 HGOOD_START_TIME
      LOGICAL*4 HGOOD_START_PLANE

      COMMON/HMS_DECODED_SCIN/
     &    HSCIN_ZPOS,
     &    HSCIN_CENTER_COORD,
     &    HSCIN_WIDTH,
     &    HSCIN_SLOP,
     &    HSCIN_DEC_HIT_COORD,
     &    HSCIN_COR_ADC,
     &    HSCIN_COR_TIME,
     &    HSTART_TIME,
     &    HSCIN_HITS_PER_PLANE,
     &    HSTART_HITNUM,
     &    HSTART_HITSIDE,
     &    HTWO_GOOD_TIMES,  
     &    HGOOD_START_TIME,
     &    HGOOD_START_PLANE
*
*
*     HMS CALORIMETER HITS
*
*     ALLOW FOR NO SPARCIFICATION OF SHOWER COUNTER ELEMENTS
*
*     EACH COUNTER HAS A
*         ROW NUMBER
*         COLUMN NUMBER
*         ADC VALUE
*         
*     THE TOTAL NUMBER OF SHOWER HITS IS HCAL_TOT_HITS
*
      INTEGER*4 HMAX_CAL_BLOCKS     ! TOTAL NUMBER OF SHOWER BLOCKS
      PARAMETER (HMAX_CAL_BLOCKS=48)
      INTEGER*4 HCAL_TOT_HITS
      INTEGER*4 HCAL_ROW
      INTEGER*4 HCAL_COLUMN
      INTEGER*4 HCAL_ADC
      COMMON/HMS_RAW_CAL/
     &    HCAL_ROW(HMAX_CAL_BLOCKS),
     &    HCAL_COLUMN(HMAX_CAL_BLOCKS),
     &    HCAL_ADC(HMAX_CAL_BLOCKS),
     &    HCAL_TOT_HITS
*
*    DECODED CALORIMETER QUANTITIES
*    FILLED BY H_TRANS_CAL USING ONLY THE CALORIMETER INFORMATION
* 
*         X COORDINATE OF BLOCK CENTER
*         Y COORDINATE OF BLOCK CENTER
*         ENERGY DEPOSITED IN THE BLOCK
*         ENERGY DEPOSITED IN COLUMN #1
*                                    #2
*                                    #3
*                                    #4
*         TOTAL ENERGY IN THE CALORIMETER
      INTEGER*4 HNHITS_CAL      !NUMBER OF CALORIMETER HITS ABOVE THRESHOLD
      REAL*4 HBLOCK_XC          !X COORDINATE OF BLOCK CENTER
      REAL*4 HBLOCK_ZC          !Z COORDINATE OF BLOCK CENTER
      REAL*4 HBLOCK_DE          !ENERGY DEPOSITION IN THE BLOCKS
      REAL*4 HCAL_E1            !ENERGY DEPOSITION IN COLUMN #1
      REAL*4 HCAL_E2            !                            #2
      REAL*4 HCAL_E3            !                            #3
      REAL*4 HCAL_E4            !                            #4
      REAL*4 HCAL_ET            !TOTAL ENERGY IN THE CALORIMETER
      COMMON/HMS_DECODED_CAL/
     &       HBLOCK_XC(HMAX_CAL_BLOCKS),
     &       HBLOCK_ZC(HMAX_CAL_BLOCKS),
     &       HBLOCK_DE(HMAX_CAL_BLOCKS),
     &       HCAL_E1,
     &       HCAL_E2,
     &       HCAL_E3,
     &       HCAL_E4,
     &       HCAL_ET,
     &       HNHITS_CAL

*
*     HMS CERENKOV HITS
*      FILLED BY G_get_next_event
*
*     THERE ARE TWO CERENKOV PHOTOTUBES. EACH HIT HAS
*          TUBE NUMBER
*          ADC VALUE
*    THE TOTAL NUMBER OF PHOTOTUBE HITS IS HCER_TOT_HITS
*    HOWEVER TO MAKE THE DECODERS SYMMETRICAL TO A SCINT WE MUST ADD
*    A DUMMY PLANE NUMBER.
      INTEGER*4 HMAX_CER_HITS
      PARAMETER(HMAX_CER_HITS=2)
      INTEGER*4 HCER_TOT_HITS
      INTEGER*4 HCER_TUBE_NUM
      INTEGER*4 HCER_ADC
      INTEGER*4 HCER_PLANE
      COMMON/HMS_RAW_CER/
     &     HCER_TUBE_NUM(HMAX_CER_HITS),
     &     HCER_ADC(HMAX_CER_HITS),
     &     HCER_PLANE(HMAX_CER_HITS),
     &     HCER_TOT_HITS
*
*
*
 
*     HMS DETECTOR TRACK QUANTITIES
*     FILLED BY H_TRACK SUBROUTINE 
*
      INTEGER*4 HNTRACKS_MAX       ! NUMBER OF TRACKS ALLOWED IN FOCAL PLANE
      PARAMETER (HNTRACKS_MAX=5)   ! SET MAXIMUM TO 5
      INTEGER*4 HNTRACKHITS_MAX    ! MAXIMUM NUMBER OF HITS IN EACH TRACK
      PARAMETER (HNTRACKHITS_MAX=16) ! SET MAXIMUM TO 15
      INTEGER*4 HNTRACKS_FP         ! NUMBER OF FOCAL PLANE TRACKS FOUND
*     ALL THE FOLLOWING VARIABLES ARE ARRAYS
*
      REAL*4  HX_FP                ! X POSITION OF TRACK IN FOCAL PLANE
      REAL*4  HY_FP                ! Y POSITION OF TRACK IN FOCAL PLANE
      REAL*4  HZ_FP                ! Z POSITION OF TRACK IN FOCAL PLANE
      REAL*4  HXP_FP               ! X SLOPE OF TRACK IN FOCAL PLANE
      REAL*4  HYP_FP               ! Y SLOPE OF TRACK IN FOCAL PLANE
      REAL*4  HCHI2_FP             ! FIT QUALITY IN FOCAL PLANE
      INTEGER*4 HNFREE_FP          ! NUMBER OF DEGREES OF FREEDOM IN FIT
      INTEGER*4 HNTRACK_HITS      ! LIST OF HITS ON EACH TRACK
      REAL*4  HDEL_FP              !  FOCAL PLANE ERROR MATRIX
* THE FOCAL PLANE ERROR MATRIX IS A 4 BY 4 BY HNTRACK_MAX ARRAY
* THE FOUR INDECIES FOR EACH TRACK ARE X, XP, Y,  YP
* THE ERROR MATRIX FOR EACH TRACK IS SYMMETRIC ABOUT THE DIAGONAL
*      DELXX   DELXXP  DELXY   DELXYP
*      DELXPX  DELXPXP DELXPY  DELXPYP
*      DELYPX  DELYXP  DELYY   DELYYP
*      DELYPX DELYPXP  DELYPY  DELYPYP
      COMMON/HMS_FOCAL_PLANE/
     1      HX_FP(HNTRACKS_MAX),
     2      HY_FP(HNTRACKS_MAX),
     3      HZ_FP(HNTRACKS_MAX),
     4      HXP_FP(HNTRACKS_MAX),
     5      HYP_FP(HNTRACKS_MAX),
     6      HCHI2_FP(HNTRACKS_MAX),
     7      HDEL_FP(4,4,HNTRACKS_MAX),
     8      HNTRACK_HITS(HNTRACKS_MAX,HNTRACKHITS_MAX+1),
     9      HNFREE_FP(HNTRACKS_MAX),
     A      HNTRACKS_FP
 
*     HMS TARGET QUANTITIES
*     ASSUME THE SAME NUMBER OF MAXIMUM TRACKS AS IN THE FOCAL PLANE
*     HNTRACKS_MAX
*
*     FILLED BY H_TARG_TRANS SUBROUTINE
      INTEGER*4 HNTRACKS_TAR        ! NUMBER OF TARGET TRACKS FOUND 
*     ALL THE FOLLOWING VARIABLES ARE ARRAYS
*
      REAL*4  HX_TAR                ! X POSITION OF TRACK AT TARGET
      REAL*4  HY_TAR                ! Y POSITION OF TRACK AT TARGET
      REAL*4  HZ_TAR                ! Z POSITION OF TRACK AT TARGET
      REAL*4  HXP_TAR               ! X SLOPE OF TRACK AT TARGET
      REAL*4  HYP_TAR               ! Y SLOPE OF TRACK AT TARGET 
      REAL*4  HDELTA_TAR            ! FRACTION TRACK MOMENTUM
      REAL*4  HP_TAR                ! MOMENTUM OF TRACK AT TARGET
      REAL*4  HCHI2_TAR             ! FIT QUALITY AT TARGET
      INTEGER*4 HNFREE_TAR          ! NUMBER OF DEGREES OF FREEDOM IN FIT
      REAL*4  HDEL_TAR              ! TARGET  ERROR MATRIX
* THE FOCAL PLANE ERROR MATRIX IS A 5 BY 5 BY HNTRACK_MAX ARRAY
* THE FIVE INDECIES FOR EACH TRACK ARE X, Y , XP, YP and P
* THE ERROR MATRIX FOR EACH TRACK IS SYMMETRIC ABOUT THE DIAGONAL
*      DELXX  DELXXP  DELXY  DELXYP  DELXP
*      DELXPX DELXPXP DELXPY DELXPYP DELXPP
*      DELYX  DELYXPY DELYY  DELYYP  DELYP
*      DELYPX DELYPXP DELYPY DELYPYP DELYPP
*      DELPX  DELPXP  DELPY  DELPXP  DELPP
      INTEGER*4 HLINK_TAR_FP        ! LINK POINTER TO FOCAL PLANE TRACK NUMBER
      COMMON/HMS_TARGET/
     1      HX_TAR(HNTRACKS_MAX),
     2      HY_TAR(HNTRACKS_MAX),
     3      HZ_TAR(HNTRACKS_MAX),
     4      HXP_TAR(HNTRACKS_MAX),
     5      HYP_TAR(HNTRACKS_MAX),
     6      HDELTA_TAR(HNTRACKS_MAX),
     7      HP_TAR(HNTRACKS_MAX),
     8      HCHI2_TAR(HNTRACKS_MAX),
     9      HDEL_TAR(5,5,HNTRACKS_MAX),
     A      HNFREE_TAR(HNTRACKS_MAX),
     B      HLINK_TAR_FP(HNTRACKS_MAX),
     C      HNTRACKS_TAR
*
*
*     HMS_TRACK_TESTS
*       
*     PARTICLE ID INFORMATION FILLED BY H_TOF and H_CAL
*     THIS STORES THE RESULTS OF SHOWER AND SCINTILLATOR CALCULATIONS
*     FOR EACH OF THE TRACKS GENERATED BY H_TRACK
*
      INTEGER*4 HNBLOCKS_CAL(HNTRACKS_MAX)
      REAL*4    HTRACK_E1(HNTRACKS_MAX)
      REAL*4    HTRACK_E2(HNTRACKS_MAX)
      REAL*4    HTRACK_E3(HNTRACKS_MAX)
      REAL*4    HTRACK_E4(HNTRACKS_MAX)
      REAL*4    HTRACK_ET(HNTRACKS_MAX)
      REAL*4    HTRACK_PRESHOWER_E(HNTRACKS_MAX)
*
      INTEGER*4 HSCIN_HIT(HNTRACKS_MAX,HMAX_SCIN_HITS)
      INTEGER*4 HNUM_SCIN_HIT(HNTRACKS_MAX)
      REAL*4 HDEDX(HNTRACKS_MAX,HNUM_SCIN_PLANES)        
      REAL*4 HBETA(HNTRACKS_MAX)
      REAL*4 HBETA_CHISQ(HNTRACKS_MAX)
      REAL*4 HTIME_AT_FP(HNTRACKS_MAX)
*
*
      COMMON/HMS_TRACK_TESTS/
     1       HTRACK_E1,        ! ENERGY IN FIRST CALORIMETER COLUMN NEAR TRACK
     2       HTRACK_E2,        !           SECOND COLUMN
     3       HTRACK_E3,        !           THIRD COLUMN
     4       HTRACK_E4,        !           FOURTH COLUMN
     5       HTRACK_ET,        ! TOTAL SHOWER ENERGY ALONG TRACK
     6       HTRACK_PRESHOWER_E, ! PRESHOWER ENERGY-Note definition is exp. dep.
     7       HDEDX,                   ! 
     8       HBETA,                   ! VELOCITY OF TRACK
     9       HBETA_CHISQ,             ! CHISQ OF FIT TO BETA OF TRACK
     A       HTIME_AT_FP,             ! 
     B       HNBLOCKS_CAL,            ! NUMBER OF SHOWER BLOCKS ON EACH TRACK
     C       HSCIN_HIT,               ! ARRAY OF SCIN HITS ASSOCIATED WITH
     D                                ! EACH TRACK
     E       HNUM_SCIN_HIT            ! NUMBER OF HITSIN EACH ROW OF
     F                                ! HSCIN_HIT
*                                          
*
*
*     SOS  DATA
*
*     RAW DC DATA FILLED BY G_get_next_event
*     SOS DRIFT CHAMBER HITS
*         EACH CHAMBER HIT (TDC VALUE) HAS A 
*             PLANE NUMBER
*             WIRE NUMBER
*             TDC VALUE
*     THE TOTAL NUMBER OF HITS IS GIVEN IN SDC_RAW_TOT_HITS
*
      INTEGER*4 SMAX_DC_HITS          ! MAXIUM NUMBER OF DRIFT CHAMBER HITS
      INTEGER*4 SMAX_NUM_DC_PLANES    ! MAX NUMBER OF SOS DRIFT CHAMBER PLANES
      PARAMETER(SMAX_DC_HITS=1008) 
      PARAMETER(SMAX_NUM_DC_PLANES=18)
      INTEGER*4 SDC_RAW_PLANE_NUM
      INTEGER*4 SDC_RAW_WIRE_NUM
      INTEGER*4 SDC_RAW_TDC
      INTEGER*4 SDC_RAW_TOT_HITS
      COMMON/SOS_RAW_DC/
     1    SDC_RAW_PLANE_NUM(SMAX_DC_HITS),
     2    SDC_RAW_WIRE_NUM(SMAX_DC_HITS),
     3    SDC_RAW_TDC(SMAX_DC_HITS),
     4    SDC_RAW_TOT_HITS
*
*     SOS DC DECODED DATA
*
*     FILLED BY S_TRANS_DC ROUTINE 
*     SOS DRIFT CHAMBER HITS
*         EACH CHAMBER HIT (TDC VALUE) HAS A 
*             PLANE NUMBER
*             WIRE NUMBER
*             TDC VALUE
*             DRIFT TIME
*             DRIFT DISTANCE
*             GENERALIZED COORDINATE OF HIT WIRE CENTER 
*             GENERALIZED COORDINATE OF HIT PERPENDICULAR TO WIRE DIRECTION
*
*     THE TOTAL NUMBER OF HITS IN EACH PLANE IS GIVEN IN SDC_HITS_PER_PLANE(I)
*     THE TOTAL NUMBER OF HITS IS GIVEN IN SDC_TOT_HITS
*
      INTEGER*4 SDC_PLANE_NUM            ! COPIED FROM SOS_RAW_DC
      INTEGER*4 SDC_WIRE_NUM             ! COPIED FROM SOS_RAW_DC
      INTEGER*4 SDC_TDC                  ! COPIED FROM SOS_RAW_DC
      INTEGER*4 SDC_HITS_PER_PLANE
      INTEGER*4 SDC_TOT_HITS
      REAL*4 SDC_DRIFT_TIME
      REAL*4 SDC_DRIFT_DIS
      REAL*4 SDC_WIRE_CENTER
      REAL*4 SDC_WIRE_COORD
      COMMON/SMS_DECODED_DC/
     1    SDC_DRIFT_TIME(SMAX_DC_HITS),
     2    SDC_DRIFT_DIS(SMAX_DC_HITS),
     3    SDC_WIRE_CENTER(SMAX_DC_HITS),
     4    SDC_WIRE_COORD(SMAX_DC_HITS),
     5    SDC_PLANE_NUM(SMAX_DC_HITS),
     6    SDC_WIRE_NUM(SMAX_DC_HITS),
     7    SDC_TDC(SMAX_DC_HITS),
     8    SDC_HITS_PER_PLANE(SMAX_NUM_DC_PLANES),
     9    SDC_TOT_HITS
*
*     SOS SCINTILLATOR HITS
*     FILLED BY G_get_next_event 
*         EACH SCINTILLATOR HIT IS SPECIFIED BY A
*              SCINTILLATOR PLANE NUMBER
*              SCINTILLATOR COUNTER NUMBER
*              SCINTILLATOR ADC AT POSITIVE GENERALIZED COORDINATE END
*              SCINTILLATOR ADC AT NEGATIVE GENERALIZED COORDINATE END
*              SCINTILLATOR TDC AT POSITIVE GENERALIZED COORDINATE END
*              SCINTILLATOR TDC AT NEGATIVE GENERALIZED COORDINATE END    
*     THE TOTAL NUMBER OF HITS IS GIVEN BY SSCIN_TOT_HITS 
      INTEGER*4 SMAX_SCIN_HITS           ! MAXIMUM TOTAL NUMBER OF SCIN HITS
      PARAMETER (SMAX_SCIN_HITS=16)
      INTEGER*4 SNUM_SCIN_PLANES          ! TOTAL NUMBER OF SCIN PLANES
      PARAMETER (SNUM_SCIN_PLANES=4)
      INTEGER*4 SSCIN_PLANE_NUM
      INTEGER*4 SSCIN_COUNTER_NUM
      INTEGER*4 SSCIN_ADC_POS
      INTEGER*4 SSCIN_ADC_NEG
      INTEGER*4 SSCIN_TDC_POS
      INTEGER*4 SSCIN_TDC_NEG
      INTEGER*4 SSCIN_TOT_HITS 
*
      COMMON/SOS_RAW_SCIN/
     &    SSCIN_PLANE_NUM(SMAX_SCIN_HITS),
     &    SSCIN_COUNTER_NUM(SMAX_SCIN_HITS),
     &    SSCIN_ADC_POS(SMAX_SCIN_HITS),
     &    SSCIN_ADC_NEG(SMAX_SCIN_HITS),
     &    SSCIN_TDC_POS(SMAX_SCIN_HITS),
     &    SSCIN_TDC_NEG(SMAX_SCIN_HITS),
     &    SSCIN_TOT_HITS
*
*
*    DECODED SCIN HITS
*     FILLED BY S_TRANS_SCIN
*       THIS USES SCINTILLATOR INFORMATION ONLY TO CALCUATE   
*          SSCIN_APPROX_HIT_COORD    GENERALIZED COORDINATE ALONG HIT
*                                      SCINTILLATOR DETERMINED FROM TDC INFO.
*          SSCIN_COR_ADC       CORRECTED PULSE HEIGHT AT HIT
*          SSCIN_COR_TIME      CORRECTED TIME AT HIT
*     THE TOTAL NUMBER OF HITS IN EACH PLANE IS GIVEN BY SSCIN_HITS_PER_PLANE
*     THE SSTART_TIME IS DEFINED AS THE TIME IF THE TRACK HAD GONE THROUGH
* THE CENTER OF S1X. IT IS USED BY S_TRANS_DC FOR THE DRIFT TIME 
* CALCULATION.
*     STWO_GOOD_TIMES  IS A LOGICAL VARIABLE WHICH IS TRUE IF BOTH ENDS
* OF THE SCINTILLATOR ARE HIT AND FALSE IF ONLY ONE END IS HIT. 
*     SGOOD_START_TIME IS TRUE IF A START TIME WAS FOUND
*     SGOOD_START_PLANE IS TRUE IF TIME WAS SET BY COUNTER IN S1X.
*
      REAL*4    SSCIN_ZPOS(SMAX_SCIN_HITS)
      REAL*4    SSCIN_CENTER_COORD(SMAX_SCIN_HITS)
      REAL*4    SSCIN_DEC_HIT_COORD(SMAX_SCIN_HITS)
      REAL*4    SSCIN_WIDTH(SMAX_SCIN_HITS)
      REAL*4    SSCIN_SLOP(SMAX_SCIN_HITS)
      REAL*4    SSCIN_COR_ADC(SMAX_SCIN_HITS)
      REAL*4    SSCIN_COR_TIME(SMAX_SCIN_HITS)
      REAL*4    SSTART_TIME
      INTEGER*4 SSTART_HITNUM
      INTEGER*4 SSTART_HITSIDE
      INTEGER*4 SSCIN_HITS_PER_PLANE(SNUM_SCIN_PLANES)
      LOGICAL*4 STWO_GOOD_TIMES(SMAX_SCIN_HITS)
      LOGICAL*4 SGOOD_START_TIME
      LOGICAL*4 SGOOD_START_PLANE

      COMMON/SOS_DECODED_SCIN/
     &    SSCIN_ZPOS,
     &    SSCIN_CENTER_COORD,
     &    SSCIN_WIDTH,
     &    SSCIN_SLOP,
     &    SSCIN_DEC_HIT_COORD,
     &    SSCIN_COR_ADC,
     &    SSCIN_COR_TIME,
     &    SSTART_TIME,
     &    SSCIN_HITS_PER_PLANE,
     &    SSTART_HITNUM,
     &    SSTART_HITSIDE,
     &    STWO_GOOD_TIMES,
     &    SGOOD_START_TIME,
     &    SGOOD_START_PLANE
*
*
*     SOS CALORIMETER HITS
*      FILLED BY G_get_next_event
*
*     ALLOW FOR NO SPARCIFICATION OF SHOWER COUNTER ELEMENTS
*
*     EACH COUNTER HAS A
*         ROW NUMBER
*         COLUMN NUMBER
*         ADC VALUE
*         
*     THE TOTAL NUMBER OF SHOWER HITS IS SCAL_TOT_HITS
*
      INTEGER*4 SMAX_CAL_BLOCKS     ! TOTAL NUMBER OF SHOWER BLOCKS
      PARAMETER (SMAX_CAL_BLOCKS=48)
      INTEGER*4 SCAL_TOT_HITS
      INTEGER*4 SCAL_ROW
      INTEGER*4 SCAL_COLUMN
      INTEGER*4 SCAL_ADC
      COMMON/SOS_RAW_CAL/
     &    SCAL_ROW(SMAX_CAL_BLOCKS),
     &    SCAL_COLUMN(SMAX_CAL_BLOCKS),
     &    SCAL_ADC(SMAX_CAL_BLOCKS),
     &    SCAL_TOT_HITS
*
*    DECODED CALORIMETER QUANTITIES
*    FILLED BY S_TRANS_CAL USING ONLY THE CALORIMETER INFORMATION
* 
*         X COORDINATE OF BLOCK CENTER
*         Z COORDINATE OF BLOCK CENTER
*         ENERGY DEPOSITED IN THE BLOCK
*         ENERGY DEPOSITED IN COLUMN #1
*                                    #2
*                                    #3
*                                    #4
*         TOTAL ENERGY IN THE CALORIMETER
      INTEGER*4 SNHITS_CAL      !NUMBER OF CALORIMETER HITS ABOVE THRESHOLD
      REAL*4 SBLOCK_XC          !X COORDINATE OF BLOCK CENTER
      REAL*4 SBLOCK_ZC          !Z COORDINATE OF BLOCK CENTER
      REAL*4 SBLOCK_DE          !ENERGY DEPOSITION IN THE BLOCKS
      REAL*4 SCAL_E1            !ENERGY DEPOSITION IN COLUMN #1
      REAL*4 SCAL_E2            !                            #2
      REAL*4 SCAL_E3            !                            #3
      REAL*4 SCAL_E4            !                            #4
      REAL*4 SCAL_ET            !TOTAL ENERGY IN THE CALORIMETER
      COMMON/SOS_DECODED_CAL/
     &       SBLOCK_XC(SMAX_CAL_BLOCKS),
     &       SBLOCK_ZC(SMAX_CAL_BLOCKS),
     &       SBLOCK_DE(SMAX_CAL_BLOCKS),
     &       SCAL_E1,
     &       SCAL_E2,
     &       SCAL_E3,
     &       SCAL_E4,
     &       SCAL_ET,
     &       SNHITS_CAL
*
*
*     SOS CERENKOV HITS
*      FILLED BY G_get_next_event
*
*     THERE ARE FOUR CERENKOV PHOTOTUBES. EACH HIT HAS
*          TUBE NUMBER
*          ADC VALUE
*    THE TOTAL NUMBER OF PHOTOTUBE HITS IS SCER_TOT_HITS
*    HOWEVER TO MAKE THE DECODERS SYMMETRICAL TO A SCINT WE MUST ADD
*    A DUMMY PLANE NUMBER.
      INTEGER*4 SMAX_CER_HITS
      PARAMETER(SMAX_CER_HITS=4)
      INTEGER*4 SCER_TOT_HITS
      INTEGER*4 SCER_TUBE_NUM
      INTEGER*4 SCER_ADC
      INTEGER*4 SCER_PLANE
      COMMON/SOS_RAW_CER/
     &     SCER_TUBE_NUM(SMAX_CER_HITS),
     &     SCER_ADC(SMAX_CER_HITS),
     &     SCER_PLANE(SMAX_CER_HITS),
     &     SCER_TOT_HITS
*
*
 
*     SOS DETECTOR TRACK QUANTITIES
*     FILLED BY S_TRACK SUBROUTINE 
*
      INTEGER*4 SNTRACKS_MAX       ! NUMBER OF TRACKS ALLOWED IN FOCAL PLANE
      PARAMETER (SNTRACKS_MAX=10)   ! SET MAXIMUM TO 10
      INTEGER*4 SNTRACKHITS_MAX    ! MAXIMUM NUMBER OF HITS IN EACH TRACK
      PARAMETER (SNTRACKHITS_MAX=24) ! SET MAXIMUM TO 24
      INTEGER*4 SNTRACKS_FP         ! NUMBER OF FOCAL PLANE TRACKS FOUND
*     ALL THE FOLLOWING VARIABLES ARE ARRAYS
*
      REAL*4  SX_FP                ! X POSITION OF TRACK IN FOCAL PLANE
      REAL*4  SY_FP                ! Y POSITION OF TRACK IN FOCAL PLANE
      REAL*4  SZ_FP                ! Z POSITION OF TRACK IN FOCAL PLANE
      REAL*4  SXP_FP               ! X SLOPE OF TRACK IN FOCAL PLANE
      REAL*4  SYP_FP               ! Y SLOPE OF TRACK IN FOCAL PLANE
      REAL*4  SCHI2_FP             ! FIT QUALITY IN FOCAL PLANE
      INTEGER*4 SNFREE_FP          ! NUMBER OF DEGREES OF FREEDOM IN FIT
      INTEGER*4 SNTRACK_HITS      ! LIST OF HITS ON EACH TRACK
      REAL*4  SDEL_FP              !  FOCAL PLANE ERROR MATRIX
* THE FOCAL PLANE ERROR MATRIX IS A 4 BY 4 BY SNTRACK_MAX ARRAY
* THE FOUR INDECIES FOR EACH TRACK ARE X, XP, Y,  YP
* THE ERROR MATRIX FOR EACH TRACK IS SYMMETRIC ABOUT THE DIAGONAL
*      DELXX   DELXXP  DELXY   DELXYP
*      DELXPX  DELXPXP DELXPY  DELXPYP
*      DELYPX  DELYXP  DELYY   DELYYP
*      DELYPX DELYPXP  DELYPY  DELYPYP
      COMMON/SOS_FOCAL_PLANE/
     1      SX_FP(SNTRACKS_MAX),
     2      SY_FP(SNTRACKS_MAX),
     3      SZ_FP(SNTRACKS_MAX),
     4      SXP_FP(SNTRACKS_MAX),
     5      SYP_FP(SNTRACKS_MAX),
     6      SCHI2_FP(SNTRACKS_MAX),
     7      SDEL_FP(4,4,SNTRACKS_MAX),
     8      SNTRACK_HITS(SNTRACKS_MAX,SNTRACKHITS_MAX+1),
     9      SNFREE_FP(SNTRACKS_MAX),
     A      SNTRACKS_FP
 
*     SOS TARGET QUANTITIES
*     ASSUME THE SAME NUMBER OF MAXIMUM TRACKS AS IN THE FOCAL PLANE
*     SNTRACKS_MAX
*
*     FILLED BY S_TARG_TRANS SUBROUTINE
      INTEGER*4 SNTRACKS_TAR        ! NUMBER OF TARGET TRACKS FOUND 
*     ALL THE FOLLOWING VARIABLES ARE ARRAYS
*
      REAL*4  SX_TAR                ! X POSITION OF TRACK AT TARGET
      REAL*4  SY_TAR                ! Y POSITION OF TRACK AT TARGET
      REAL*4  SZ_TAR                ! Z POSITION OF TRACK AT TARGET
      REAL*4  SXP_TAR               ! X SLOPE OF TRACK AT TARGET
      REAL*4  SYP_TAR               ! Y SLOPE OF TRACK AT TARGET 
      REAL*4  SDELTA_TAR            ! FRACTION TRACK MOMENTUM
      REAL*4  SP_TAR                ! MOMENTUM OF TRACK AT TARGET
      REAL*4  SCHI2_TAR             ! FIT QUALITY AT TARGET
      INTEGER*4 SNFREE_TAR          ! NUMBER OF DEGREES OF FREEDOM IN FIT
      REAL*4  SDEL_TAR              ! TARGET  ERROR MATRIX
* THE FOCAL PLANE ERROR MATRIX IS A 5 BY 5 BY SNTRACK_MAX ARRAY
* THE FIVE INDECIES FOR EACH TRACK ARE X, Y , XP, YP and P
* THE ERROR MATRIX FOR EACH TRACK IS SYMMETRIC ABOUT THE DIAGONAL
*      DELXX  DELXXP  DELXY  DELXYP  DELXP
*      DELXPX DELXPXP DELXPY DELXPYP DELXPP
*      DELYX  DELYXPY DELYY  DELYYP  DELYP
*      DELYPX DELYPXP DELYPY DELYPYP DELYPP
*      DELPX  DELPXP  DELPY  DELPXP  DELPP
      INTEGER*4 SLINK_TAR_FP        ! LINK POINTER TO FOCAL PLANE TRACK NUMBER
      COMMON/SOS_TARGET/
     1      SX_TAR(SNTRACKS_MAX),
     2      SY_TAR(SNTRACKS_MAX),
     3      SZ_TAR(SNTRACKS_MAX),
     4      SXP_TAR(SNTRACKS_MAX),
     5      SYP_TAR(SNTRACKS_MAX),
     6      SDELTA_TAR(SNTRACKS_MAX),
     7      SP_TAR(SNTRACKS_MAX),
     8      SCHI2_TAR(SNTRACKS_MAX),
     9      SDEL_TAR(5,5,SNTRACKS_MAX),
     A      SNFREE_TAR(SNTRACKS_MAX),
     B      SLINK_TAR_FP(SNTRACKS_MAX),
     C      SNTRACKS_TAR
*
*                                          
*     SOS_TRACK_TESTS
*       
*     PARTICLE ID INFORMATION FILLED BY S_TOF and S_CAL
*     THIS STORES THE RESULTS OF SHOWER AND SCINTILLATOR CALCULATIONS
*     FOR EACH OF THE TRACKS GENERATED BY S_TRACK
*
      INTEGER*4 SNBLOCKS_CAL(SNTRACKS_MAX)
      REAL*4    STRACK_E1(SNTRACKS_MAX)
      REAL*4    STRACK_E2(SNTRACKS_MAX)
      REAL*4    STRACK_E3(SNTRACKS_MAX)
      REAL*4    STRACK_E4(SNTRACKS_MAX)
      REAL*4    STRACK_ET(SNTRACKS_MAX)
      REAL*4    STRACK_PRESHOWER_E(HNTRACKS_MAX)
*
      INTEGER*4 SSCIN_HIT(SNTRACKS_MAX,SMAX_SCIN_HITS)
      INTEGER*4 SNUM_SCIN_HIT(SNTRACKS_MAX)
      REAL*4 SDEDX(SNTRACKS_MAX,SNUM_SCIN_PLANES)        
      REAL*4 SBETA(SNTRACKS_MAX)
      REAL*4 SBETA_CHISQ(SNTRACKS_MAX)
      REAL*4 STIME_AT_FP(SNTRACKS_MAX)
*
*
      COMMON/SOS_TRACK_TESTS/
     1       STRACK_E1,        ! ENERGY IN FIRST CALORIMETER COLUMN NEAR TRACK
     2       STRACK_E2,        !           SECOND COLUMN
     3       STRACK_E3,        !           THIRD COLUMN
     4       STRACK_E4,        !           FOURTH COLUMN
     5       STRACK_ET,        ! TOTAL SHOWER ENERGY ALONG TRACK
     6       STRACK_PRESHOWER_E, ! Preshower energy on track Note exp dependent.
     7       SDEDX,                   ! 
     8       SBETA,                   ! VELOCITY OF TRACK
     9       SBETA_CHISQ,             ! CHISQ OF FIT TO BETA OF TRACK
     A       STIME_AT_FP,             ! 
     B       SNBLOCKS_CAL,            ! NUMBER OF SHOWER BLOCKS ON EACH TRACK
     C       SSCIN_HIT,               ! ARRAY OF SCIN HITS ASSOCIATED WITH
     D                                ! EACH TRACK
     E       SNUM_SCIN_HIT            ! NUMBER OF HIT ScIN EACH ROW OF
     F                                ! SSCIN_HIT
*                                          
*
*******************end: gen_data_structures.cmn*************************
*     Local Variables:
*     mode: fortran
*     fortran-continuation-string: "&"
*     End:
